import logging
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import ContextTypes
from gpt_api import yandex_gpt_request, yandex_gpt_request_async
from news import get_news, update_news
from reports import save_report
from users import add_user
import traceback
import openai

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.DEBUG,  # –ò–∑–º–µ–Ω—è–µ–º —É—Ä–æ–≤–µ–Ω—å –Ω–∞ DEBUG –¥–ª—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—ã—Ö –ª–æ–≥–æ–≤
    format='%(asctime)s - %(name)s - %(levelname)s - [%(filename)s:%(lineno)d] - %(message)s',
    handlers=[
        logging.FileHandler("handlers.log", encoding='utf-8'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
USER_STATE_NONE = "none"
USER_STATE_VALERA = "valera"
USER_STATE_LEGAL = "legal"
USER_STATE_REPORT = "report"
USER_STATE_UPDATE_NEWS = "update_news"
USER_STATE_BROADCAST = "broadcast"

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_contexts = {}

# –°–æ–∑–¥–∞—ë–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏
def main_menu():
    keyboard = [
        ["üì∏ –í–∞–ª–µ—Ä–∞"],
        ["üî¥ –ê–Ω–æ–Ω–∏–º"],
        ["üìã –ú–µ–Ω—é"]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

# –°–æ–∑–¥–∞—ë–º –º–µ–Ω—é –∫–æ–º–∞–Ω–¥
def commands_menu():
    keyboard = [
        ["/start", "/help"],
        ["/news", "/contact"],
        ["‚Ü©Ô∏è –ù–∞–∑–∞–¥"]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await add_user(update.effective_chat.id)
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    user_contexts[update.effective_chat.id] = {"role": USER_STATE_NONE, "history": []}
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_chat.id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")
    
    WELCOME_MESSAGE = (
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ CNC Luga!\n\n"
        "–≠—Ç–æ—Ç –±–æ—Ç ‚Äî –≤–∞—à –Ω–∞–¥—ë–∂–Ω—ã–π –Ω–∞–ø–∞—Ä–Ω–∏–∫ –≤ –º–∏—Ä–µ –ß–ü–£ –∏ —Ç—Ä—É–¥–æ–≤—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤. –í–∞–ª–µ—Ä–∞ ‚Äî –≤–∞—à —Å—Ç—Ä–æ–≥–∏–π, –Ω–æ –æ—Ç–∑—ã–≤—á–∏–≤—ã–π –ø–æ–º–æ—â–Ω–∏–∫: "
        "–æ–Ω —Ä–∞–∑–±–∏—Ä–∞–µ—Ç—Å—è –≤ –º–µ—Ç–∞–ª–ª–æ–æ–±—Ä–∞–±–æ—Ç–∫–µ, G-–∫–æ–¥–µ, –Ω–∞–ª–∞–¥–∫–µ —Å—Ç–∞–Ω–∫–æ–≤ –∏ –∑–Ω–∞–µ—Ç –∑–∞–∫–æ–Ω—ã –∫–∞–∫ —Å–≤–æ–π —è—â–∏–∫ —Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏.\n\n"
        "–¢—É—Ç –≤—ã –Ω–∞–π–¥—ë—Ç–µ:\n"
        "üîß *–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏ —é—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å*:\n"
        "  - /valera ‚Äî –ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –ø–æ –ß–ü–£, –º–µ—Ç–∞–ª–ª–æ–æ–±—Ä–∞–±–æ—Ç–∫–µ, –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é –∏–ª–∏ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–º –≤–æ–ø—Ä–æ—Å–∞–º ‚Äî –í–∞–ª–µ—Ä–∞ –≤—Å—ë –æ–±—ä—è—Å–Ω–∏—Ç.\n"
        "  - /report ‚Äî –ê–Ω–æ–Ω–∏–º–Ω–æ —Å–æ–æ–±—â–∏—Ç–µ –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö –Ω–∞ —Ä–∞–±–æ—Ç–µ.\n\n"
        "üì∞ *–°–æ–æ–±—â–µ—Å—Ç–≤–æ –∏ –Ω–æ–≤–æ—Å—Ç–∏*:\n"
        "  - /news ‚Äî –ù–æ–≤–æ—Å—Ç–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ –º–∏—Ä–∞ –ß–ü–£.\n"
        "  - /contact ‚Äî –ö–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è —Å–≤—è–∑–∏ —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π.\n\n"
        "–ú—ã –∑–¥–µ—Å—å, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –≤–∞—à—É —Ä–∞–±–æ—Ç—É –ø—Ä–æ—â–µ, –∞ –∂–∏–∑–Ω—å ‚Äî —É–≤–µ—Ä–µ–Ω–Ω–µ–µ. –í–∞–ª–µ—Ä–∞ —Ä—è–¥–æ–º ‚Äî –≤—ã –Ω–µ –æ–¥–∏–Ω!"
    )
    await update.message.reply_text(WELCOME_MESSAGE, parse_mode='Markdown', reply_markup=main_menu())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    HELP_MESSAGE = (
        "ü§ñ *CNC Luga Bot - –ü–æ–º–æ—â–Ω–∏–∫ –≤ –º–∏—Ä–µ –ß–ü–£ –∏ —Ç—Ä—É–¥–æ–≤—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤*\n\n"
        "*–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n"
        "/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –ø–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
        "/valera - –ù–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥ —Å –í–∞–ª–µ—Ä–æ–π (—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏ —é—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å)\n"
        "/report - –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "/news - –ü–æ–∫–∞–∑–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏\n"
        "/contact - –ö–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è —Å–≤—è–∑–∏\n\n"
        "*–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:*\n"
        "1. –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ –º–µ–Ω—é\n"
        "2. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –±–æ—Ç–∞\n"
        "3. –í –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –≤—ã –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É 'üìã –ú–µ–Ω—é'"
    )
    await update.message.reply_text(HELP_MESSAGE, parse_mode='Markdown', reply_markup=main_menu())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "üìã –ú–µ–Ω—é"
async def menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É:", reply_markup=commands_menu())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "‚Ü©Ô∏è –ù–∞–∑–∞–¥"
async def back_to_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
async def handle_menu_buttons(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    text = update.message.text
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É: {text}")
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –Ω–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    if text == "üì∏ –í–∞–ª–µ—Ä–∞":
        user_contexts[chat_id] = {"role": USER_STATE_VALERA, "history": []}
        await valera_start(update, context)
    elif text == "üî¥ –ê–Ω–æ–Ω–∏–º":
        user_contexts[chat_id] = {"role": USER_STATE_REPORT, "history": []}
        await report_start(update, context)

# üì∏ –í–∞–ª–µ—Ä–∞ ‚Äî –Ω–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞
async def valera_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∑–∞–ø—É—Å—Ç–∏–ª –¥–∏–∞–ª–æ–≥ —Å –í–∞–ª–µ—Ä–æ–π")
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_contexts[chat_id] = {"role": USER_STATE_VALERA, "history": []}
    await update.message.reply_text(
        "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞, –≤–æ–ø—Ä–æ—Å –ø–æ –ß–ü–£ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —á–µ—Ä—Ç–µ–∂–∞ –¥–ª—è –ø–æ–º–æ—â–∏ —Å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ–º:",
        reply_markup=ReplyKeyboardRemove()
    )

# –õ–æ–≥–∏–∫–∞ –æ–±—â–µ–Ω–∏—è —Å –í–∞–ª–µ—Ä–æ–π
async def valera_ai(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_chat.id
    user_message = update.message.text
    
    if user_id not in user_contexts:
        user_contexts[user_id] = {"role": USER_STATE_VALERA, "history": []}
    
    user_contexts[user_id]["history"].append({"role": "user", "content": user_message})
    
    system_prompt = """–¢—ã ‚Äî –í–∞–ª–µ—Ä–∞, –æ–ø—ã—Ç–Ω—ã–π –Ω–∞–ª–∞–¥—á–∏–∫ –ß–ü–£ –∏ —é—Ä–∏—Å—Ç –≤ –æ–¥–Ω–æ–º –ª–∏—Ü–µ. –¢—ã —Å—Ç—Ä–æ–≥–∏–π, –Ω–æ –æ—Ç–∑—ã–≤—á–∏–≤—ã–π –ø–æ–º–æ—â–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–∑–±–∏—Ä–∞–µ—Ç—Å—è –≤ –º–µ—Ç–∞–ª–ª–æ–æ–±—Ä–∞–±–æ—Ç–∫–µ, G-–∫–æ–¥–µ, –Ω–∞–ª–∞–¥–∫–µ —Å—Ç–∞–Ω–∫–æ–≤ –∏ –∑–Ω–∞–µ—Ç –∑–∞–∫–æ–Ω—ã –∫–∞–∫ —Å–≤–æ–π —è—â–∏–∫ —Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏.

–¢–≤–æ–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–∞—á–µ—Å—Ç–≤–∞:
1. –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–∞:
   - –ì–ª—É–±–æ–∫–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –ß–ü–£, –º–µ—Ç–∞–ª–ª–æ–æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è
   - –û–ø—ã—Ç –Ω–∞–ª–∞–¥–∫–∏ —Å—Ç–∞–Ω–∫–æ–≤ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
   - –ó–Ω–∞–Ω–∏–µ G-–∫–æ–¥–∞ –∏ CAM-—Å–∏—Å—Ç–µ–º

2. –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å:
   - –ü–æ–Ω–∏–º–∞–Ω–∏–µ —Ç—Ä—É–¥–æ–≤–æ–≥–æ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞
   - –û–ø—ã—Ç –≤ —Ä–µ—à–µ–Ω–∏–∏ —Ç—Ä—É–¥–æ–≤—ã—Ö —Å–ø–æ—Ä–æ–≤
   - –ó–Ω–∞–Ω–∏–µ –ø—Ä–∞–≤ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ –∏ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–π

3. –°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è:
   - –°—Ç—Ä–æ–≥–∏–π, –Ω–æ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π —Ç–æ–Ω
   - –ß—ë—Ç–∫–∏–µ –∏ –ø–æ–Ω—è—Ç–Ω—ã–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è
   - –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –ø–æ–º–æ—á—å –≤ –ª—é–±–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏

4. –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã:
   - –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤
   - –ö–∞—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ü–∏–∏
   - –°–æ–±–ª—é–¥–µ–Ω–∏–µ —Ç—Ä—É–¥–æ–≤—ã—Ö –ø—Ä–∞–≤

–û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ, –ø–æ —Å—É—â–µ—Å—Ç–≤—É, —Å —é–º–æ—Ä–æ–º –∏ –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å ‚Äî –±—É–¥—å —Ç–æ –≤–æ–ø—Ä–æ—Å –ø–æ –Ω–∞–ª–∞–¥–∫–µ —Å—Ç–∞–Ω–∫–∞ –∏–ª–∏ –ø–æ —Ç—Ä—É–¥–æ–≤–æ–º—É –ø—Ä–∞–≤—É."""

    messages = [{"role": "system", "content": system_prompt}]
    messages.extend(user_contexts[user_id]["history"])
    
    try:
        response = await openai.ChatCompletion.acreate(
            model="gpt-3.5-turbo",
            messages=messages,
            temperature=0.7,
            max_tokens=1000
        )
        bot_response = response.choices[0].message.content
        user_contexts[user_id]["history"].append({"role": "assistant", "content": bot_response})
        await update.message.reply_text(bot_response)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {str(e)}")
        await update.message.reply_text("–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# üî¥ –ê–Ω–æ–Ω–∏–º ‚Äî –Ω–∞—á–∞–ª–æ
async def report_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∑–∞–ø—É—Å—Ç–∏–ª –¥–∏–∞–ª–æ–≥ —Å –ê–Ω–æ–Ω–∏–º–æ–º")
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_contexts[chat_id] = {"role": USER_STATE_REPORT, "history": []}
    await update.message.reply_text(
        "üî¥ –û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –∞–Ω–æ–Ω–∏–º–Ω–æ:",
        reply_markup=ReplyKeyboardRemove()
    )

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
async def report_response(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ê–Ω–æ–Ω–∏–º–∞
    if chat_id not in user_contexts or user_contexts[chat_id]["role"] != USER_STATE_REPORT:
        logger.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –ø—ã—Ç–∞–µ—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ")
        await update.message.reply_text(
            "–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–µ–∂–∏–º–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /report –∏–ª–∏ –∫–Ω–æ–ø–∫—É –º–µ–Ω—é.",
            reply_markup=main_menu()
        )
        return
        
    user_id = update.effective_user.id
    report_text = update.message.text.strip()
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –æ—Ç–ø—Ä–∞–≤–∏–ª –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {report_text[:50]}...")
    
    save_report(user_id, report_text)
    await update.message.reply_text(
        "‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ –∏ –ø–µ—Ä–µ–¥–∞–Ω–æ –∞–Ω–æ–Ω–∏–º–Ω–æ.",
        reply_markup=main_menu()
    )
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
    user_contexts[chat_id] = {"role": USER_STATE_NONE, "history": []}

# üì∞ –ù–æ–≤–æ—Å—Ç–∏
async def news_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∑–∞–ø—Ä–æ—Å–∏–ª –Ω–æ–≤–æ—Å—Ç–∏")
    
    news_text = get_news()
    await update.message.reply_text(news_text, reply_markup=main_menu())

# ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π
async def update_news_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∑–∞–ø—É—Å—Ç–∏–ª —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π")
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_contexts[chat_id] = {"role": USER_STATE_UPDATE_NEWS, "history": []}
    await update.message.reply_text(
        "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–µ–π:",
        reply_markup=ReplyKeyboardRemove()
    )

async def process_update_news(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π
    if chat_id not in user_contexts or user_contexts[chat_id]["role"] != USER_STATE_UPDATE_NEWS:
        logger.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –ø—ã—Ç–∞–µ—Ç—Å—è –æ–±–Ω–æ–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–∏, –Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ")
        await update.message.reply_text(
            "–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /update_news.",
            reply_markup=main_menu()
        )
        return
        
    new_news = update.message.text.strip()
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –æ–±–Ω–æ–≤–∏–ª –Ω–æ–≤–æ—Å—Ç–∏: {new_news[:50]}...")
    
    update_news(new_news)
    await update.message.reply_text(
        "‚úÖ –ù–æ–≤–æ—Å—Ç–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!",
        reply_markup=main_menu()
    )
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
    user_contexts[chat_id] = {"role": USER_STATE_NONE, "history": []}

# üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã
async def contact_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∑–∞–ø—Ä–æ—Å–∏–ª –∫–æ–Ω—Ç–∞–∫—Ç—ã")
    
    await update.message.reply_text(
        "üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –º–æ–∂–Ω–æ –ø–æ email: support@cncluga.com",
        reply_markup=main_menu()
    )

# –†–∞—Å—Å—ã–ª–∫–∞
async def broadcast_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∑–∞–ø—É—Å—Ç–∏–ª —Ä–∞—Å—Å—ã–ª–∫—É")
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_contexts[chat_id] = {"role": USER_STATE_BROADCAST, "history": []}
    await update.message.reply_text(
        "–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:",
        reply_markup=ReplyKeyboardRemove()
    )

async def process_broadcast(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Ä–∞—Å—Å—ã–ª–∫–∏
    if chat_id not in user_contexts or user_contexts[chat_id]["role"] != USER_STATE_BROADCAST:
        logger.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –ø—ã—Ç–∞–µ—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É, –Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ")
        await update.message.reply_text(
            "–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–µ–∂–∏–º–µ —Ä–∞—Å—Å—ã–ª–∫–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /broadcast.",
            reply_markup=main_menu()
        )
        return
        
    broadcast_text = update.message.text.strip()
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –æ—Ç–ø—Ä–∞–≤–∏–ª —Ä–∞—Å—Å—ã–ª–∫—É: {broadcast_text[:50]}...")
    
    from broadcast import send_broadcast
    await send_broadcast(context.bot, broadcast_text)
    await update.message.reply_text(
        "‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.",
        reply_markup=main_menu()
    )
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
    user_contexts[chat_id] = {"role": USER_STATE_NONE, "history": []}

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    text = update.message.text
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
    if text == "üìã –ú–µ–Ω—é":
        await menu(update, context)
    elif text == "‚Ü©Ô∏è –ù–∞–∑–∞–¥":
        await back_to_main_menu(update, context)
    elif text in ["üì∏ –í–∞–ª–µ—Ä–∞", "üî¥ –ê–Ω–æ–Ω–∏–º"]:
        await handle_menu_buttons(update, context)
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    elif chat_id in user_contexts:
        if user_contexts[chat_id]["role"] == USER_STATE_VALERA:
            await valera_ai(update, context)
        elif user_contexts[chat_id]["role"] == USER_STATE_REPORT:
            await report_response(update, context)
        elif user_contexts[chat_id]["role"] == USER_STATE_UPDATE_NEWS:
            await process_update_news(update, context)
        elif user_contexts[chat_id]["role"] == USER_STATE_BROADCAST:
            await process_broadcast(update, context)
    else:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ –∫–∞–∫–æ–º-–ª–∏–±–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
        await start(update, context)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
def register_handlers(app_bot):
    # –ö–æ–º–∞–Ω–¥—ã
    app_bot.add_handler(CommandHandler("start", start))
    app_bot.add_handler(CommandHandler("help", help_command))
    app_bot.add_handler(CommandHandler("menu", menu))
    app_bot.add_handler(CommandHandler("valera", valera_start))
    app_bot.add_handler(CommandHandler("report", report_start))
    app_bot.add_handler(CommandHandler("news", news_handler))
    app_bot.add_handler(CommandHandler("update_news", update_news_start))
    app_bot.add_handler(CommandHandler("contact", contact_handler))
    app_bot.add_handler(CommandHandler("broadcast", broadcast_message))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
    app_bot.add_handler(MessageHandler(filters.Regex("^‚Ü©Ô∏è –ù–∞–∑–∞–¥$"), back_to_main_menu))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    app_bot.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message)) 