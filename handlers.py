import logging
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import ContextTypes
from gpt_api import yandex_gpt_request, yandex_gpt_request_async
from news import get_news, update_news
from reports import save_report
from users import add_user
import traceback

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.DEBUG,  # –ò–∑–º–µ–Ω—è–µ–º —É—Ä–æ–≤–µ–Ω—å –Ω–∞ DEBUG –¥–ª—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—ã—Ö –ª–æ–≥–æ–≤
    format='%(asctime)s - %(name)s - %(levelname)s - [%(filename)s:%(lineno)d] - %(message)s',
    handlers=[
        logging.FileHandler("handlers.log", encoding='utf-8'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
USER_STATE_NONE = "none"
USER_STATE_VALERA = "valera"
USER_STATE_LEGAL = "legal"
USER_STATE_REPORT = "report"
USER_STATE_UPDATE_NEWS = "update_news"
USER_STATE_BROADCAST = "broadcast"

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_contexts = {}

# –°–æ–∑–¥–∞—ë–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏
def main_menu():
    keyboard = [
        ["üì∏ –í–∞–ª–µ—Ä–∞"],
        ["‚öñ –Æ—Ä–∏—Å—Ç", "üî¥ –ê–Ω–æ–Ω–∏–º"],
        ["üìã –ú–µ–Ω—é"]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

# –°–æ–∑–¥–∞—ë–º –º–µ–Ω—é –∫–æ–º–∞–Ω–¥
def commands_menu():
    keyboard = [
        ["/start", "/help"],
        ["/news", "/contact"],
        ["‚Ü©Ô∏è –ù–∞–∑–∞–¥"]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await add_user(update.effective_chat.id)
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    user_contexts[update.effective_chat.id] = {"role": USER_STATE_NONE, "history": []}
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_chat.id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")
    
    WELCOME_MESSAGE = (
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ CNC Luga!\n\n"
        "–≠—Ç–æ—Ç –±–æ—Ç ‚Äî –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –≤ –º–∏—Ä–µ –ß–ü–£. –ú—ã –Ω–µ —Ç–æ–ª—å–∫–æ –ø–æ–º–æ–≥–∞–µ–º –ø–∏—Å–∞—Ç—å G-–∫–æ–¥ –ø–æ —Ñ–æ—Ç–æ –¥–µ—Ç–∞–ª–µ–π –∏ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã —Å –ø–æ–º–æ—â—å—é –ò–ò, "
        "–Ω–æ –∏ —Å—Ç–æ–∏–º –Ω–∞ —Å—Ç—Ä–∞–∂–µ –≤–∞—à–∏—Ö –ø—Ä–∞–≤.\n\n"
        "–¢—É—Ç –≤—ã –Ω–∞–π–¥—ë—Ç–µ:\n"
        "üîß *–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å*:\n"
        "  - /valera ‚Äî –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ –∏–ª–∏ –≤–æ–ø—Ä–æ—Å –ø–æ –ß–ü–£, –∏ –í–∞–ª–µ—Ä–∞ –ø–æ–¥–±–µ—Ä—ë—Ç —Ä–µ–∂–∏–º—ã —Ä–µ–∑–∞–Ω–∏—è –∏ –ø–æ–º–æ–∂–µ—Ç —Å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ–º.\n\n"
        "‚öñ *–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞*:\n"
        "  - /legal ‚Äî –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –±–æ–ª—å–Ω–∏—á–Ω—ã—Ö, –æ—Ç–ø—É—Å–∫–æ–≤ –∏ –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–æ–∫.\n"
        "  - /report ‚Äî –ê–Ω–æ–Ω–∏–º–Ω–æ —Å–æ–æ–±—â–∏—Ç–µ –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö –Ω–∞ —Ä–∞–±–æ—Ç–µ.\n\n"
        "üì∞ *–°–æ–æ–±—â–µ—Å—Ç–≤–æ –∏ –Ω–æ–≤–æ—Å—Ç–∏*:\n"
        "  - /news ‚Äî –ù–æ–≤–æ—Å—Ç–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ –º–∏—Ä–∞ –ß–ü–£.\n"
        "  - /contact ‚Äî –ö–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è —Å–≤—è–∑–∏ —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π.\n\n"
        "–ú—ã –∑–¥–µ—Å—å, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –≤–∞—à—É —Ä–∞–±–æ—Ç—É –ø—Ä–æ—â–µ, –∞ –∂–∏–∑–Ω—å ‚Äî –ª—É—á—à–µ. –í–º–µ—Å—Ç–µ –º—ã —Å–∏–ª—å–Ω–µ–µ!"
    )
    await update.message.reply_text(WELCOME_MESSAGE, parse_mode='Markdown', reply_markup=main_menu())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    HELP_MESSAGE = (
        "ü§ñ *CNC Luga Bot - –ü–æ–º–æ—â–Ω–∏–∫ –≤ –º–∏—Ä–µ –ß–ü–£*\n\n"
        "*–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n"
        "/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –ø–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
        "/valera - –ù–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥ —Å –í–∞–ª–µ—Ä–æ–π (—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å)\n"
        "/legal - –ù–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥ —Å –Æ—Ä–∏—Å—Ç–æ–º (—é—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å)\n"
        "/report - –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "/news - –ü–æ–∫–∞–∑–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏\n"
        "/contact - –ö–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è —Å–≤—è–∑–∏\n\n"
        "*–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:*\n"
        "1. –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ –º–µ–Ω—é\n"
        "2. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –±–æ—Ç–∞\n"
        "3. –í –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –≤—ã –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É 'üìã –ú–µ–Ω—é'"
    )
    await update.message.reply_text(HELP_MESSAGE, parse_mode='Markdown', reply_markup=main_menu())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "üìã –ú–µ–Ω—é"
async def menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É:", reply_markup=commands_menu())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "‚Ü©Ô∏è –ù–∞–∑–∞–¥"
async def back_to_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
async def handle_menu_buttons(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    text = update.message.text
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É: {text}")
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –Ω–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    if text == "üì∏ –í–∞–ª–µ—Ä–∞":
        user_contexts[chat_id] = {"role": USER_STATE_VALERA, "history": []}
        await valera_start(update, context)
    elif text == "‚öñ –Æ—Ä–∏—Å—Ç":
        user_contexts[chat_id] = {"role": USER_STATE_LEGAL, "history": []}
        await legal_start(update, context)
    elif text == "üî¥ –ê–Ω–æ–Ω–∏–º":
        user_contexts[chat_id] = {"role": USER_STATE_REPORT, "history": []}
        await report_start(update, context)

# üì∏ –í–∞–ª–µ—Ä–∞ ‚Äî –Ω–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞
async def valera_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∑–∞–ø—É—Å—Ç–∏–ª –¥–∏–∞–ª–æ–≥ —Å –í–∞–ª–µ—Ä–æ–π")
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_contexts[chat_id] = {"role": USER_STATE_VALERA, "history": []}
    await update.message.reply_text(
        "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞, –≤–æ–ø—Ä–æ—Å –ø–æ –ß–ü–£ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —á–µ—Ä—Ç–µ–∂–∞ –¥–ª—è –ø–æ–º–æ—â–∏ —Å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ–º:",
        reply_markup=ReplyKeyboardRemove()
    )

# –õ–æ–≥–∏–∫–∞ –æ–±—â–µ–Ω–∏—è —Å –í–∞–ª–µ—Ä–æ–π
async def valera_ai(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –í–∞–ª–µ—Ä—ã
    if chat_id not in user_contexts or user_contexts[chat_id]["role"] != USER_STATE_VALERA:
        logger.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –ø—ã—Ç–∞–µ—Ç—Å—è –æ–±—â–∞—Ç—å—Å—è —Å –í–∞–ª–µ—Ä–æ–π, –Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ")
        await update.message.reply_text(
            "–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –¥–∏–∞–ª–æ–≥–µ —Å –í–∞–ª–µ—Ä–æ–π. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /valera –∏–ª–∏ –∫–Ω–æ–ø–∫—É –º–µ–Ω—é.",
            reply_markup=main_menu()
        )
        return
        
    if update.message.text and update.message.text.startswith('/'):
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∑–∞–≤–µ—Ä—à–∏–ª –¥–∏–∞–ª–æ–≥ —Å –í–∞–ª–µ—Ä–æ–π, –≤—ã–±—Ä–∞–≤ –∫–æ–º–∞–Ω–¥—É {update.message.text}")
        await update.message.reply_text(
            "–í—ã –≤—ã–±—Ä–∞–ª–∏ –¥—Ä—É–≥—É—é –∫–æ–º–∞–Ω–¥—É. –î–∏–∞–ª–æ–≥ —Å –í–∞–ª–µ—Ä–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω.",
            reply_markup=main_menu()
        )
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
        user_contexts[chat_id] = {"role": USER_STATE_NONE, "history": []}
        return
    
    user_question = update.message.text.strip() if update.message.text else "–§–æ—Ç–æ —á–µ—Ä—Ç–µ–∂–∞"
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∑–∞–¥–∞–ª –≤–æ–ø—Ä–æ—Å –í–∞–ª–µ—Ä–µ: {user_question[:50]}...")
    user_contexts[chat_id]["history"].append(f"–¢—ã: {user_question}")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è
    processing_msg = await update.message.reply_text("ü§î –í–∞–ª–µ—Ä–∞ –¥—É–º–∞–µ—Ç –Ω–∞–¥ –≤–∞—à–∏–º –≤–æ–ø—Ä–æ—Å–æ–º...")
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –í–∞–ª–µ—Ä—ã
    prompt = (
        "–¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π —Ç–µ—Ö–Ω–æ–ª–æ–≥, –Ω–∞–ª–∞–¥—á–∏–∫ –ß–ü–£ –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ —Ç–µ—Ä–ø–∏—Ç –≥–ª—É–ø–æ—Å—Ç–∏, –Ω–æ –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å, "
        "–æ—Ç–≤–µ—á–∞—è —Å—Ç—Ä–æ–≥–æ, —Å–∞—Ä–∫–∞—Å—Ç–∏—á–Ω–æ –∏ —Å —é–º–æ—Ä–æ–º. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ–ø–æ–ª–Ω—ã–π –∏–ª–∏ –Ω–µ—è—Å–Ω—ã–π, —É—Ç–æ—á–Ω—è–π –¥–µ—Ç–∞–ª–∏. "
        "–û—Ç–≤–µ—á–∞–π –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Ç–µ–º–∞–º –ß–ü–£, –º–µ—Ç–∞–ª–ª–æ–æ–±—Ä–∞–±–æ—Ç–∫–∏, –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤, –Ω–∞–ª–∞–¥–∫–∏ —Å—Ç–∞–Ω–∫–∞ –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è. "
        "–°—Ç–∞—Ä–∞–π—Å—è –æ—Ç–≤–µ—Ç–∏—Ç—å –∫—Ä–∞—Ç–∫–æ, –Ω–æ –ø—Ä–µ–¥–µ–ª—å–Ω–æ –ø–æ–Ω—è—Ç–Ω–æ. "
        "–ï—Å–ª–∏ —Å–ø—Ä–∞—à–∏–≤–∞—é—Ç –ø—Ä–æ —Ä–µ–∂–∏–º—ã —Ä–µ–∑–∞–Ω–∏—è ‚Äì —É–∫–∞–∑—ã–≤–∞–π —Å–∫–æ—Ä–æ—Å—Ç—å (Vc), –ø–æ–¥–∞—á—É (F), –≥–ª—É–±–∏–Ω—É —Ä–µ–∑–∞–Ω–∏—è (Ap), –æ–±–æ—Ä–æ—Ç—ã (RPM) –∏ –°–û–ñ. "
        "–ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –ø—Ä–æ –≤—ã–±–æ—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞, –Ω–∞–ª–∞–¥–∫—É, —Ñ–∞—Å–∫—É, —Ä–∞–¥–∏—É—Å –∏–ª–∏ —à–µ—Ä–æ—Ö–æ–≤–∞—Ç–æ—Å—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, Ra10) ‚Äî –æ–±—ä—è—Å–Ω—è–π, –∫–æ–≥–¥–∞ –∏ –∑–∞—á–µ–º —á—Ç–æ –ø—Ä–∏–º–µ–Ω—è—Ç—å. "
        "–ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å —Å–≤—è–∑–∞–Ω —Å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ–º –ß–ü–£ –∏–ª–∏ G-–∫–æ–¥–æ–º, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –∏ –ø—Ä–∏–º–µ—Ä—ã –∫–æ–¥–∞. "
        "–í –∫–æ–Ω—Ü–µ –∫–∞–∂–¥–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –¥–æ–±–∞–≤–ª—è–π –û–î–ù–£ –º–æ—Ç–∏–≤–∏—Ä—É—é—â—É—é —Ñ—Ä–∞–∑—É –≤ —Ç–≤–æ—ë–º —Å—Ç–∏–ª–µ ‚Äî —Å–∞—Ä–∫–∞—Å—Ç–∏—á–Ω—É—é, –Ω–æ –¥–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—É—é. "
        "–§—Ä–∞–∑–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω–æ–π, –≤ –¥—É—Ö–µ –æ–ø—ã—Ç–Ω–æ–≥–æ –Ω–∞–ª–∞–¥—á–∏–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–∫–∞–ª—ã–≤–∞–µ—Ç, –Ω–æ —Ö–æ—á–µ—Ç –ø–æ–º–æ—á—å. "
        "–ü—Ä–∏–º–µ—Ä—ã: '–ù—É –≤–æ—Ç, —É–∂–µ –ª—É—á—à–µ, –Ω–æ –¥—É–º–∞–π –≥–æ–ª–æ–≤–æ–π!', '–¢—ã, –∫–æ–Ω–µ—á–Ω–æ, –∫–∞–¥—Ä... –Ω–æ —è –ø–æ–º–æ–≥—É!', '–ï—Å–ª–∏ –æ–ø—è—Ç—å —Ç—É–ø–∏—à—å ‚Äî –ø–µ—Ä–µ—á–∏—Ç–∞–π –µ—â—ë —Ä–∞–∑!', –Ω–æ —Ç—ã –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–¥—É–º—ã–≤–∞—Ç—å –ù–û–í–´–ï —Ñ—Ä–∞–∑—ã –∫–∞–∂–¥—ã–π —Ä–∞–∑."
        "\n\n"
        "–ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞: " + "\n".join(user_contexts[chat_id]["history"]) + "\n" +
        f"–í–æ—Ç –≤–æ–ø—Ä–æ—Å: {user_question}"
    )

    # –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–∞ –æ—Ç API
    async def handle_valera_response(answer):
        try:
            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è
            await context.bot.delete_message(chat_id, processing_msg.message_id)
            
            if not answer or not answer.strip():
                answer = "‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Ç–æ—á–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å."
            logger.info(f"–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç API –Ø–Ω–¥–µ–∫—Å GPT –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}")
            await update.message.reply_text(f"ü§ñ –í–∞–ª–µ—Ä–∞ –æ—Ç–≤–µ—á–∞–µ—Ç:\n\n{answer}")
            user_contexts[chat_id]["history"].append(f"–í–∞–ª–µ—Ä–∞: {answer}")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç API –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}: {e}")
            await update.message.reply_text(
                "‚ö† –û—à–∏–±–∫–∞ –í–∞–ª–µ—Ä—ã: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                reply_markup=main_menu()
            )
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ
            user_contexts[chat_id] = {"role": USER_STATE_NONE, "history": []}

    try:
        logger.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ API –Ø–Ω–¥–µ–∫—Å GPT –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}")
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å
        await yandex_gpt_request_async(prompt, handle_valera_response)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –í–∞–ª–µ—Ä—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}: {e}")
        await context.bot.delete_message(chat_id, processing_msg.message_id)
        await update.message.reply_text(
            "‚ö† –û—à–∏–±–∫–∞ –í–∞–ª–µ—Ä—ã: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            reply_markup=main_menu()
        )
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ
        user_contexts[chat_id] = {"role": USER_STATE_NONE, "history": []}

# ‚öñ –Æ—Ä–∏—Å—Ç ‚Äî –Ω–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞
async def legal_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∑–∞–ø—É—Å—Ç–∏–ª –¥–∏–∞–ª–æ–≥ —Å –Æ—Ä–∏—Å—Ç–æ–º")
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_contexts[chat_id] = {"role": USER_STATE_LEGAL, "history": []}
    await update.message.reply_text(
        "–û–ø–∏—à–∏—Ç–µ –í–∞—à—É —Å–∏—Ç—É–∞—Ü–∏—é –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –≤–æ–ø—Ä–æ—Å:",
        reply_markup=ReplyKeyboardRemove()
    )

# –õ–æ–≥–∏–∫–∞ –æ–±—â–µ–Ω–∏—è —Å –Æ—Ä–∏—Å—Ç–æ–º
async def legal_ai(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Æ—Ä–∏—Å—Ç–∞
    if chat_id not in user_contexts or user_contexts[chat_id]["role"] != USER_STATE_LEGAL:
        logger.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –ø—ã—Ç–∞–µ—Ç—Å—è –æ–±—â–∞—Ç—å—Å—è —Å –Æ—Ä–∏—Å—Ç–æ–º, –Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ")
        await update.message.reply_text(
            "–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –¥–∏–∞–ª–æ–≥–µ —Å –Æ—Ä–∏—Å—Ç–æ–º. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /legal –∏–ª–∏ –∫–Ω–æ–ø–∫—É –º–µ–Ω—é.",
            reply_markup=main_menu()
        )
        return
        
    if update.message.text and update.message.text.startswith('/'):
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∑–∞–≤–µ—Ä—à–∏–ª –¥–∏–∞–ª–æ–≥ —Å –Æ—Ä–∏—Å—Ç–æ–º, –≤—ã–±—Ä–∞–≤ –∫–æ–º–∞–Ω–¥—É {update.message.text}")
        await update.message.reply_text(
            "–í—ã –≤—ã–±—Ä–∞–ª–∏ –¥—Ä—É–≥—É—é –∫–æ–º–∞–Ω–¥—É. –î–∏–∞–ª–æ–≥ —Å –Æ—Ä–∏—Å—Ç–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω.",
            reply_markup=main_menu()
        )
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
        user_contexts[chat_id] = {"role": USER_STATE_NONE, "history": []}
        return
        
    user_question = update.message.text.strip()
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∑–∞–¥–∞–ª –≤–æ–ø—Ä–æ—Å –Æ—Ä–∏—Å—Ç—É: {user_question[:50]}...")
    user_contexts[chat_id]["history"].append(f"–¢—ã: {user_question}")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è
    processing_msg = await update.message.reply_text("‚öñ –Æ—Ä–∏—Å—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à –≤–æ–ø—Ä–æ—Å...")
    
    prompt = (
        "–¢—ã ‚Äî –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —é—Ä–∏—Å—Ç, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –Ω–∞ –∑–∞—â–∏—Ç–µ –ø—Ä–∞–≤ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ –≤ –†–æ—Å—Å–∏–∏. "
        "–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –Ω–µ –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å, –∞ **–∑–∞—â–∏—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è**, –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –µ–≥–æ –º–æ—Ä–∞–ª—å–Ω–æ, –ø–æ–∫–∞–∑–∞—Ç—å –≤—ã—Ö–æ–¥ –∏ –¥–∞—Ç—å —á—ë—Ç–∫–∏–π –ø–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π. "
        "–ï—Å–ª–∏ –≤ –≤–æ–ø—Ä–æ—Å–µ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ ‚Äî **–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É—Ç–æ—á–Ω–∏ –∫–ª—é—á–µ–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã**, —á—Ç–æ–±—ã –æ—Ç–≤–µ—Ç –±—ã–ª –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ç–æ—á–Ω—ã–º. "
        "–û—Ç–≤–µ—á–∞–π –ø—Ä–æ—Å—Ç–æ, –¥–æ—Å—Ç—É–ø–Ω–æ, –±–µ–∑ –∑–∞–ø—É–≥–∏–≤–∞–Ω–∏—è –∏ –ª–∏—à–Ω–∏—Ö —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤. –ü–æ–º–Ω–∏: —á–µ–ª–æ–≤–µ–∫ –æ–±—Ä–∞—â–∞–µ—Ç—Å—è, –ø–æ—Ç–æ–º—É —á—Ç–æ —á—É–≤—Å—Ç–≤—É–µ—Ç —Å–µ–±—è –±–µ–∑–∑–∞—â–∏—Ç–Ω—ã–º. "
        "–î–∞–π –ø–æ–Ω—è—Ç—å, —á—Ç–æ –æ–Ω —É–∂–µ –Ω–µ –æ–¥–∏–Ω ‚Äî —Ç–µ–ø–µ—Ä—å —É –Ω–µ–≥–æ –µ—Å—Ç—å –≥—Ä–∞–º–æ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞. "
        "–ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –∫–∞—Å–∞–µ—Ç—Å—è –¥–∞–≤–ª–µ–Ω–∏—è –Ω–∞ —Ä–∞–±–æ—Ç–µ, —É–≥—Ä–æ–∑, —É–≤–æ–ª—å–Ω–µ–Ω–∏—è, –∂–∞–ª–æ–± –∏–ª–∏ –ø—Ä–∞–≤ ‚Äî –¥–∞–π —Å–æ–≤–µ—Ç—ã, –∫—É–¥–∞ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è, –∫–∞–∫ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω–æ, –∫–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –∏ —Å —á–µ–≥–æ –Ω–∞—á–∞—Ç—å. "
        "–û–±—ä—è—Å–Ω–∏ —á–µ–ª–æ–≤–µ–∫—É, —á—Ç–æ –µ–≥–æ –º–æ–∂–Ω–æ –∑–∞—â–∏—Ç–∏—Ç—å. –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –≤–∫–ª—é—á–∞—Ç—å:\n"
        "- –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É (–≤ –¥—É—Ö–µ: ¬´–≤—ã –Ω–µ –æ–¥–∏–Ω¬ª, ¬´–º—ã –ø–æ–º–æ–∂–µ–º¬ª, ¬´–µ—Å—Ç—å —Å–ø–æ—Å–æ–±¬ª)\n"
        "- –£—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ\n"
        "- –ß—ë—Ç–∫–∏–π –ø–æ—à–∞–≥–æ–≤—ã–π –ø–ª–∞–Ω: —Å —á–µ–≥–æ –Ω–∞—á–∞—Ç—å, –∫—É–¥–∞ –∏–¥—Ç–∏, —á—Ç–æ —Å–¥–µ–ª–∞—Ç—å\n"
        "- –ü—Ä–∏–º–µ—Ä—ã, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ\n"
        "- –ù–∏–∫–∞–∫–æ–π –≤–æ–¥—ã ‚Äî —Ç–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω–∞—è –ø–æ–º–æ—â—å\n"
        "–ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞:\n" + "\n".join(user_contexts[chat_id]["history"]) + "\n" +
        f"–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_question}"
    )
    
    # –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–∞ –æ—Ç API
    async def handle_legal_response(answer):
        try:
            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è
            await context.bot.delete_message(chat_id, processing_msg.message_id)
            
            if not answer or not answer.strip():
                answer = "‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Ç–æ—á–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å."
            logger.info(f"–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç API –Ø–Ω–¥–µ–∫—Å GPT –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}")
            await update.message.reply_text(f"‚öñ –Æ—Ä–∏—Å—Ç –æ—Ç–≤–µ—á–∞–µ—Ç:\n\n{answer}")
            user_contexts[chat_id]["history"].append(f"–Æ—Ä–∏—Å—Ç: {answer}")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç API –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}: {e}")
            await update.message.reply_text(
                "‚ö† –û—à–∏–±–∫–∞ –Æ—Ä–∏—Å—Ç–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                reply_markup=main_menu()
            )
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ
            user_contexts[chat_id] = {"role": USER_STATE_NONE, "history": []}
    
    try:
        logger.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ API –Ø–Ω–¥–µ–∫—Å GPT –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}")
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å
        await yandex_gpt_request_async(prompt, handle_legal_response)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –Æ—Ä–∏—Å—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}: {e}")
        await context.bot.delete_message(chat_id, processing_msg.message_id)
        await update.message.reply_text(
            "‚ö† –û—à–∏–±–∫–∞ –Æ—Ä–∏—Å—Ç–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            reply_markup=main_menu()
        )
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ
        user_contexts[chat_id] = {"role": USER_STATE_NONE, "history": []}

# üî¥ –ê–Ω–æ–Ω–∏–º ‚Äî –Ω–∞—á–∞–ª–æ
async def report_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∑–∞–ø—É—Å—Ç–∏–ª –¥–∏–∞–ª–æ–≥ —Å –ê–Ω–æ–Ω–∏–º–æ–º")
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_contexts[chat_id] = {"role": USER_STATE_REPORT, "history": []}
    await update.message.reply_text(
        "üî¥ –û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –∞–Ω–æ–Ω–∏–º–Ω–æ:",
        reply_markup=ReplyKeyboardRemove()
    )

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
async def report_response(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ê–Ω–æ–Ω–∏–º–∞
    if chat_id not in user_contexts or user_contexts[chat_id]["role"] != USER_STATE_REPORT:
        logger.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –ø—ã—Ç–∞–µ—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ")
        await update.message.reply_text(
            "–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–µ–∂–∏–º–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /report –∏–ª–∏ –∫–Ω–æ–ø–∫—É –º–µ–Ω—é.",
            reply_markup=main_menu()
        )
        return
        
    user_id = update.effective_user.id
    report_text = update.message.text.strip()
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –æ—Ç–ø—Ä–∞–≤–∏–ª –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {report_text[:50]}...")
    
    save_report(user_id, report_text)
    await update.message.reply_text(
        "‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ –∏ –ø–µ—Ä–µ–¥–∞–Ω–æ –∞–Ω–æ–Ω–∏–º–Ω–æ.",
        reply_markup=main_menu()
    )
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
    user_contexts[chat_id] = {"role": USER_STATE_NONE, "history": []}

# üì∞ –ù–æ–≤–æ—Å—Ç–∏
async def news_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∑–∞–ø—Ä–æ—Å–∏–ª –Ω–æ–≤–æ—Å—Ç–∏")
    
    news_text = get_news()
    await update.message.reply_text(news_text, reply_markup=main_menu())

# ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π
async def update_news_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∑–∞–ø—É—Å—Ç–∏–ª —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π")
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_contexts[chat_id] = {"role": USER_STATE_UPDATE_NEWS, "history": []}
    await update.message.reply_text(
        "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–µ–π:",
        reply_markup=ReplyKeyboardRemove()
    )

async def process_update_news(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π
    if chat_id not in user_contexts or user_contexts[chat_id]["role"] != USER_STATE_UPDATE_NEWS:
        logger.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –ø—ã—Ç–∞–µ—Ç—Å—è –æ–±–Ω–æ–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–∏, –Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ")
        await update.message.reply_text(
            "–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /update_news.",
            reply_markup=main_menu()
        )
        return
        
    new_news = update.message.text.strip()
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –æ–±–Ω–æ–≤–∏–ª –Ω–æ–≤–æ—Å—Ç–∏: {new_news[:50]}...")
    
    update_news(new_news)
    await update.message.reply_text(
        "‚úÖ –ù–æ–≤–æ—Å—Ç–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!",
        reply_markup=main_menu()
    )
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
    user_contexts[chat_id] = {"role": USER_STATE_NONE, "history": []}

# üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã
async def contact_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∑–∞–ø—Ä–æ—Å–∏–ª –∫–æ–Ω—Ç–∞–∫—Ç—ã")
    
    await update.message.reply_text(
        "üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –º–æ–∂–Ω–æ –ø–æ email: support@cncluga.com",
        reply_markup=main_menu()
    )

# –†–∞—Å—Å—ã–ª–∫–∞
async def broadcast_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∑–∞–ø—É—Å—Ç–∏–ª —Ä–∞—Å—Å—ã–ª–∫—É")
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_contexts[chat_id] = {"role": USER_STATE_BROADCAST, "history": []}
    await update.message.reply_text(
        "–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:",
        reply_markup=ReplyKeyboardRemove()
    )

async def process_broadcast(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Ä–∞—Å—Å—ã–ª–∫–∏
    if chat_id not in user_contexts or user_contexts[chat_id]["role"] != USER_STATE_BROADCAST:
        logger.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –ø—ã—Ç–∞–µ—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É, –Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ")
        await update.message.reply_text(
            "–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–µ–∂–∏–º–µ —Ä–∞—Å—Å—ã–ª–∫–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /broadcast.",
            reply_markup=main_menu()
        )
        return
        
    broadcast_text = update.message.text.strip()
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –æ—Ç–ø—Ä–∞–≤–∏–ª —Ä–∞—Å—Å—ã–ª–∫—É: {broadcast_text[:50]}...")
    
    from broadcast import send_broadcast
    await send_broadcast(context.bot, broadcast_text)
    await update.message.reply_text(
        "‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.",
        reply_markup=main_menu()
    )
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
    user_contexts[chat_id] = {"role": USER_STATE_NONE, "history": []}

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    text = update.message.text
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
    if text == "üìã –ú–µ–Ω—é":
        await menu(update, context)
    elif text == "‚Ü©Ô∏è –ù–∞–∑–∞–¥":
        await back_to_main_menu(update, context)
    elif text in ["üì∏ –í–∞–ª–µ—Ä–∞", "‚öñ –Æ—Ä–∏—Å—Ç", "üî¥ –ê–Ω–æ–Ω–∏–º"]:
        await handle_menu_buttons(update, context)
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    elif chat_id in user_contexts:
        if user_contexts[chat_id]["role"] == USER_STATE_VALERA:
            await valera_ai(update, context)
        elif user_contexts[chat_id]["role"] == USER_STATE_LEGAL:
            await legal_ai(update, context)
        elif user_contexts[chat_id]["role"] == USER_STATE_REPORT:
            await report_response(update, context)
        elif user_contexts[chat_id]["role"] == USER_STATE_UPDATE_NEWS:
            await process_update_news(update, context)
        elif user_contexts[chat_id]["role"] == USER_STATE_BROADCAST:
            await process_broadcast(update, context)
    else:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ –∫–∞–∫–æ–º-–ª–∏–±–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
        await start(update, context)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
def register_handlers(app_bot):
    # –ö–æ–º–∞–Ω–¥—ã
    app_bot.add_handler(CommandHandler("start", start))
    app_bot.add_handler(CommandHandler("help", help_command))
    app_bot.add_handler(CommandHandler("menu", menu))
    app_bot.add_handler(CommandHandler("valera", valera_start))
    app_bot.add_handler(CommandHandler("legal", legal_start))
    app_bot.add_handler(CommandHandler("report", report_start))
    app_bot.add_handler(CommandHandler("news", news_handler))
    app_bot.add_handler(CommandHandler("update_news", update_news_start))
    app_bot.add_handler(CommandHandler("contact", contact_handler))
    app_bot.add_handler(CommandHandler("broadcast", broadcast_message))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
    app_bot.add_handler(MessageHandler(filters.Regex("^‚Ü©Ô∏è –ù–∞–∑–∞–¥$"), back_to_main_menu))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    app_bot.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))