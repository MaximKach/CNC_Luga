import logging
from telebot import types
from gpt_api import yandex_gpt_request, yandex_gpt_request_async
from news import get_news, update_news
from reports import save_report

def register_handlers(bot):
    # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    user_contexts = {}

    # –°–æ–∑–¥–∞—ë–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏
    def main_menu():
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é, —É–±–∏—Ä–∞–µ–º "–ê–Ω—Ç–æ–Ω" –∏ –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ "–í–∞–ª–µ—Ä–∞"
        markup.add(types.KeyboardButton("üì∏ –í–∞–ª–µ—Ä–∞"))
        markup.add(types.KeyboardButton("‚öñ –Æ—Ä–∏—Å—Ç"), types.KeyboardButton("üî¥ –ê–Ω–æ–Ω–∏–º"))
        return markup

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    @bot.message_handler(commands=['start'])
    def send_welcome(message):
        from users import save_user
        save_user(message.chat.id)
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
        user_contexts[message.chat.id] = {"role": None, "history": []}
        logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.chat.id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")
        
        WELCOME_MESSAGE = (
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ CNC Luga!\n\n"
            "–≠—Ç–æ—Ç –±–æ—Ç ‚Äî –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –≤ –º–∏—Ä–µ –ß–ü–£. –ú—ã –Ω–µ —Ç–æ–ª—å–∫–æ –ø–æ–º–æ–≥–∞–µ–º –ø–∏—Å–∞—Ç—å G-–∫–æ–¥ –ø–æ —Ñ–æ—Ç–æ –¥–µ—Ç–∞–ª–µ–π –∏ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã —Å –ø–æ–º–æ—â—å—é –ò–ò, "
            "–Ω–æ –∏ —Å—Ç–æ–∏–º –Ω–∞ —Å—Ç—Ä–∞–∂–µ –≤–∞—à–∏—Ö –ø—Ä–∞–≤.\n\n"
            "–¢—É—Ç –≤—ã –Ω–∞–π–¥—ë—Ç–µ:\n"
            "üîß *–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å*:\n"
            "  - /valera ‚Äî –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ –∏–ª–∏ –≤–æ–ø—Ä–æ—Å –ø–æ –ß–ü–£, –∏ –í–∞–ª–µ—Ä–∞ –ø–æ–¥–±–µ—Ä—ë—Ç —Ä–µ–∂–∏–º—ã —Ä–µ–∑–∞–Ω–∏—è –∏ –ø–æ–º–æ–∂–µ—Ç —Å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ–º.\n\n"
            "‚öñ *–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞*:\n"
            "  - /legal ‚Äî –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –±–æ–ª—å–Ω–∏—á–Ω—ã—Ö, –æ—Ç–ø—É—Å–∫–æ–≤ –∏ –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–æ–∫.\n"
            "  - /report ‚Äî –ê–Ω–æ–Ω–∏–º–Ω–æ —Å–æ–æ–±—â–∏—Ç–µ –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö –Ω–∞ —Ä–∞–±–æ—Ç–µ.\n\n"
            "üì∞ *–°–æ–æ–±—â–µ—Å—Ç–≤–æ –∏ –Ω–æ–≤–æ—Å—Ç–∏*:\n"
            "  - /news ‚Äî –ù–æ–≤–æ—Å—Ç–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ –º–∏—Ä–∞ –ß–ü–£.\n"
            "  - /contact ‚Äî –ö–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è —Å–≤—è–∑–∏ —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π.\n\n"
            "–ú—ã –∑–¥–µ—Å—å, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –≤–∞—à—É —Ä–∞–±–æ—Ç—É –ø—Ä–æ—â–µ, –∞ –∂–∏–∑–Ω—å ‚Äî –ª—É—á—à–µ. –í–º–µ—Å—Ç–µ –º—ã —Å–∏–ª—å–Ω–µ–µ!"
        )
        bot.send_message(message.chat.id, WELCOME_MESSAGE, parse_mode='Markdown', reply_markup=main_menu())

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
    @bot.message_handler(func=lambda message: message.text in ["üì∏ –í–∞–ª–µ—Ä–∞", "‚öñ –Æ—Ä–∏—Å—Ç", "üî¥ –ê–Ω–æ–Ω–∏–º"])
    def handle_menu_buttons(message):
        chat_id = message.chat.id
        logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É: {message.text}")
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –Ω–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
        if message.text == "üì∏ –í–∞–ª–µ—Ä–∞":
            user_contexts[chat_id] = {"role": "valera", "history": []}
            valera_start(message)
        elif message.text == "‚öñ –Æ—Ä–∏—Å—Ç":
            user_contexts[chat_id] = {"role": "legal", "history": []}
            legal_start(message)
        elif message.text == "üî¥ –ê–Ω–æ–Ω–∏–º":
            user_contexts[chat_id] = {"role": "report", "history": []}
            report_start(message)

    # üì∏ –í–∞–ª–µ—Ä–∞ ‚Äî –Ω–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞
    @bot.message_handler(commands=['valera'])
    def valera_start(message):
        chat_id = message.chat.id
        logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∑–∞–ø—É—Å—Ç–∏–ª –¥–∏–∞–ª–æ–≥ —Å –í–∞–ª–µ—Ä–æ–π")
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_contexts[chat_id] = {"role": "valera", "history": []}
        bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞, –≤–æ–ø—Ä–æ—Å –ø–æ –ß–ü–£ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —á–µ—Ä—Ç–µ–∂–∞ –¥–ª—è –ø–æ–º–æ—â–∏ —Å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ–º:", reply_markup=types.ReplyKeyboardRemove())
        bot.register_next_step_handler(message, valera_ai)

    # –õ–æ–≥–∏–∫–∞ –æ–±—â–µ–Ω–∏—è —Å –í–∞–ª–µ—Ä–æ–π
    def valera_ai(message):
        chat_id = message.chat.id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –í–∞–ª–µ—Ä—ã
        if chat_id not in user_contexts or user_contexts[chat_id]["role"] != "valera":
            logging.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –ø—ã—Ç–∞–µ—Ç—Å—è –æ–±—â–∞—Ç—å—Å—è —Å –í–∞–ª–µ—Ä–æ–π, –Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ")
            bot.send_message(chat_id, "–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –¥–∏–∞–ª–æ–≥–µ —Å –í–∞–ª–µ—Ä–æ–π. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /valera –∏–ª–∏ –∫–Ω–æ–ø–∫—É –º–µ–Ω—é.", reply_markup=main_menu())
            return
            
        if message.text.startswith('/'):
            logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∑–∞–≤–µ—Ä—à–∏–ª –¥–∏–∞–ª–æ–≥ —Å –í–∞–ª–µ—Ä–æ–π, –≤—ã–±—Ä–∞–≤ –∫–æ–º–∞–Ω–¥—É {message.text}")
            bot.send_message(chat_id, "–í—ã –≤—ã–±—Ä–∞–ª–∏ –¥—Ä—É–≥—É—é –∫–æ–º–∞–Ω–¥—É. –î–∏–∞–ª–æ–≥ —Å –í–∞–ª–µ—Ä–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω.", reply_markup=main_menu())
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
            user_contexts[chat_id] = {"role": None, "history": []}
            return
        
        user_question = message.text.strip()
        logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∑–∞–¥–∞–ª –≤–æ–ø—Ä–æ—Å –í–∞–ª–µ—Ä–µ: {user_question[:50]}...")
        user_contexts[chat_id]["history"].append(f"–¢—ã: {user_question}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è
        processing_msg = bot.send_message(chat_id, "ü§î –í–∞–ª–µ—Ä–∞ –¥—É–º–∞–µ—Ç –Ω–∞–¥ –≤–∞—à–∏–º –≤–æ–ø—Ä–æ—Å–æ–º...")
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –í–∞–ª–µ—Ä—ã
        prompt = (
            "–¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π —Ç–µ—Ö–Ω–æ–ª–æ–≥, –Ω–∞–ª–∞–¥—á–∏–∫ –ß–ü–£ –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ —Ç–µ—Ä–ø–∏—Ç –≥–ª—É–ø–æ—Å—Ç–∏, –Ω–æ –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å, "
            "–æ—Ç–≤–µ—á–∞—è —Å—Ç—Ä–æ–≥–æ, —Å–∞—Ä–∫–∞—Å—Ç–∏—á–Ω–æ –∏ —Å —é–º–æ—Ä–æ–º. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ–ø–æ–ª–Ω—ã–π –∏–ª–∏ –Ω–µ—è—Å–Ω—ã–π, —É—Ç–æ—á–Ω—è–π –¥–µ—Ç–∞–ª–∏. "
            "–û—Ç–≤–µ—á–∞–π –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Ç–µ–º–∞–º –ß–ü–£, –º–µ—Ç–∞–ª–ª–æ–æ–±—Ä–∞–±–æ—Ç–∫–∏, –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤, –Ω–∞–ª–∞–¥–∫–∏ —Å—Ç–∞–Ω–∫–∞ –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è. "
            "–°—Ç–∞—Ä–∞–π—Å—è –æ—Ç–≤–µ—Ç–∏—Ç—å –∫—Ä–∞—Ç–∫–æ, –Ω–æ –ø—Ä–µ–¥–µ–ª—å–Ω–æ –ø–æ–Ω—è—Ç–Ω–æ. "
            "–ï—Å–ª–∏ —Å–ø—Ä–∞—à–∏–≤–∞—é—Ç –ø—Ä–æ —Ä–µ–∂–∏–º—ã —Ä–µ–∑–∞–Ω–∏—è ‚Äì —É–∫–∞–∑—ã–≤–∞–π —Å–∫–æ—Ä–æ—Å—Ç—å (Vc), –ø–æ–¥–∞—á—É (F), –≥–ª—É–±–∏–Ω—É —Ä–µ–∑–∞–Ω–∏—è (Ap), –æ–±–æ—Ä–æ—Ç—ã (RPM) –∏ –°–û–ñ. "
            "–ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –ø—Ä–æ –≤—ã–±–æ—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞, –Ω–∞–ª–∞–¥–∫—É, —Ñ–∞—Å–∫—É, —Ä–∞–¥–∏—É—Å –∏–ª–∏ —à–µ—Ä–æ—Ö–æ–≤–∞—Ç–æ—Å—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, Ra10) ‚Äî –æ–±—ä—è—Å–Ω—è–π, –∫–æ–≥–¥–∞ –∏ –∑–∞—á–µ–º —á—Ç–æ –ø—Ä–∏–º–µ–Ω—è—Ç—å. "
            "–ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å —Å–≤—è–∑–∞–Ω —Å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ–º –ß–ü–£ –∏–ª–∏ G-–∫–æ–¥–æ–º, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –∏ –ø—Ä–∏–º–µ—Ä—ã –∫–æ–¥–∞. "
            "–í –∫–æ–Ω—Ü–µ –∫–∞–∂–¥–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –¥–æ–±–∞–≤–ª—è–π –û–î–ù–£ –º–æ—Ç–∏–≤–∏—Ä—É—é—â—É—é —Ñ—Ä–∞–∑—É –≤ —Ç–≤–æ—ë–º —Å—Ç–∏–ª–µ ‚Äî —Å–∞—Ä–∫–∞—Å—Ç–∏—á–Ω—É—é, –Ω–æ –¥–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—É—é. "
            "–§—Ä–∞–∑–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω–æ–π, –≤ –¥—É—Ö–µ –æ–ø—ã—Ç–Ω–æ–≥–æ –Ω–∞–ª–∞–¥—á–∏–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–∫–∞–ª—ã–≤–∞–µ—Ç, –Ω–æ —Ö–æ—á–µ—Ç –ø–æ–º–æ—á—å. "
            "–ü—Ä–∏–º–µ—Ä—ã: '–ù—É –≤–æ—Ç, —É–∂–µ –ª—É—á—à–µ, –Ω–æ –¥—É–º–∞–π –≥–æ–ª–æ–≤–æ–π!', '–¢—ã, –∫–æ–Ω–µ—á–Ω–æ, –∫–∞–¥—Ä... –Ω–æ —è –ø–æ–º–æ–≥—É!', '–ï—Å–ª–∏ –æ–ø—è—Ç—å —Ç—É–ø–∏—à—å ‚Äî –ø–µ—Ä–µ—á–∏—Ç–∞–π –µ—â—ë —Ä–∞–∑!', –Ω–æ —Ç—ã –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–¥—É–º—ã–≤–∞—Ç—å –ù–û–í–´–ï —Ñ—Ä–∞–∑—ã –∫–∞–∂–¥—ã–π —Ä–∞–∑."
            "\n\n"
            "–ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞: " + "\n".join(user_contexts[chat_id]["history"]) + "\n" +
            f"–í–æ—Ç –≤–æ–ø—Ä–æ—Å: {user_question}"
        )

        # –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–∞ –æ—Ç API
        def handle_valera_response(answer):
            try:
                # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è
                bot.delete_message(chat_id, processing_msg.message_id)
                
                if not answer or not answer.strip():
                    answer = "‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Ç–æ—á–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å."
                logging.info(f"–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç API –Ø–Ω–¥–µ–∫—Å GPT –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}")
                bot.send_message(chat_id, f"ü§ñ –í–∞–ª–µ—Ä–∞ –æ—Ç–≤–µ—á–∞–µ—Ç:\n\n{answer}")
                user_contexts[chat_id]["history"].append(f"–í–∞–ª–µ—Ä–∞: {answer}")
                bot.register_next_step_handler(message, valera_ai)  # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –¥–∏–∞–ª–æ–≥
            except Exception as e:
                logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç API –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}: {e}")
                bot.send_message(chat_id, "‚ö† –û—à–∏–±–∫–∞ –í–∞–ª–µ—Ä—ã: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", reply_markup=main_menu())
                # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ
                user_contexts[chat_id] = {"role": None, "history": []}

        try:
            logging.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ API –Ø–Ω–¥–µ–∫—Å GPT –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}")
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å
            yandex_gpt_request_async(prompt, handle_valera_response)
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –í–∞–ª–µ—Ä—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}: {e}")
            bot.delete_message(chat_id, processing_msg.message_id)
            bot.send_message(chat_id, "‚ö† –û—à–∏–±–∫–∞ –í–∞–ª–µ—Ä—ã: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", reply_markup=main_menu())
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ
            user_contexts[chat_id] = {"role": None, "history": []}

    # ‚öñ –Æ—Ä–∏—Å—Ç ‚Äî –Ω–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞
    @bot.message_handler(commands=['legal'])
    def legal_start(message):
        chat_id = message.chat.id
        logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∑–∞–ø—É—Å—Ç–∏–ª –¥–∏–∞–ª–æ–≥ —Å –Æ—Ä–∏—Å—Ç–æ–º")
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_contexts[chat_id] = {"role": "legal", "history": []}
        bot.send_message(chat_id, "–û–ø–∏—à–∏—Ç–µ –í–∞—à—É —Å–∏—Ç—É–∞—Ü–∏—é –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –≤–æ–ø—Ä–æ—Å:", reply_markup=types.ReplyKeyboardRemove())
        bot.register_next_step_handler(message, legal_ai)

    # –õ–æ–≥–∏–∫–∞ –æ–±—â–µ–Ω–∏—è —Å –Æ—Ä–∏—Å—Ç–æ–º
    def legal_ai(message):
        chat_id = message.chat.id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Æ—Ä–∏—Å—Ç–∞
        if chat_id not in user_contexts or user_contexts[chat_id]["role"] != "legal":
            logging.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –ø—ã—Ç–∞–µ—Ç—Å—è –æ–±—â–∞—Ç—å—Å—è —Å –Æ—Ä–∏—Å—Ç–æ–º, –Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ")
            bot.send_message(chat_id, "–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –¥–∏–∞–ª–æ–≥–µ —Å –Æ—Ä–∏—Å—Ç–æ–º. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /legal –∏–ª–∏ –∫–Ω–æ–ø–∫—É –º–µ–Ω—é.", reply_markup=main_menu())
            return
            
        if message.text.startswith('/'):
            logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∑–∞–≤–µ—Ä—à–∏–ª –¥–∏–∞–ª–æ–≥ —Å –Æ—Ä–∏—Å—Ç–æ–º, –≤—ã–±—Ä–∞–≤ –∫–æ–º–∞–Ω–¥—É {message.text}")
            bot.send_message(chat_id, "–í—ã –≤—ã–±—Ä–∞–ª–∏ –¥—Ä—É–≥—É—é –∫–æ–º–∞–Ω–¥—É. –î–∏–∞–ª–æ–≥ —Å –Æ—Ä–∏—Å—Ç–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω.", reply_markup=main_menu())
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
            user_contexts[chat_id] = {"role": None, "history": []}
            return
            
        user_question = message.text.strip()
        logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∑–∞–¥–∞–ª –≤–æ–ø—Ä–æ—Å –Æ—Ä–∏—Å—Ç—É: {user_question[:50]}...")
        user_contexts[chat_id]["history"].append(f"–¢—ã: {user_question}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è
        processing_msg = bot.send_message(chat_id, "‚öñ –Æ—Ä–∏—Å—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à –≤–æ–ø—Ä–æ—Å...")
        
        prompt = (
            "–¢—ã ‚Äî –ª—É—á—à–∏–π —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ –∑–∞–∫–æ–Ω–∞–º –†–§. –û—Ç–≤–µ—á–∞–π –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ç–∫–æ –∏ –ø–æ —Å—É—â–µ—Å—Ç–≤—É, "
            "–ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—è —à–∞–≥–∏ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∏—Ö —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ—è—Å–µ–Ω, –∑–∞–¥–∞–≤–∞–π —É—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã. "
            "–ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞: " + "\n".join(user_contexts[chat_id]["history"]) + "\n" +
            f"–í–æ—Ç –≤–æ–ø—Ä–æ—Å: {user_question}"
        )
        
        # –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–∞ –æ—Ç API
        def handle_legal_response(answer):
            try:
                # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è
                bot.delete_message(chat_id, processing_msg.message_id)
                
                if not answer or not answer.strip():
                    answer = "‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Ç–æ—á–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å."
                logging.info(f"–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç API –Ø–Ω–¥–µ–∫—Å GPT –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}")
                bot.send_message(chat_id, f"‚öñ –Æ—Ä–∏—Å—Ç –æ—Ç–≤–µ—á–∞–µ—Ç:\n\n{answer}")
                user_contexts[chat_id]["history"].append(f"–Æ—Ä–∏—Å—Ç: {answer}")
                bot.register_next_step_handler(message, legal_ai)  # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –¥–∏–∞–ª–æ–≥
            except Exception as e:
                logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç API –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}: {e}")
                bot.send_message(chat_id, "‚ö† –û—à–∏–±–∫–∞ –Æ—Ä–∏—Å—Ç–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", reply_markup=main_menu())
                # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ
                user_contexts[chat_id] = {"role": None, "history": []}
        
        try:
            logging.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ API –Ø–Ω–¥–µ–∫—Å GPT –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}")
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å
            yandex_gpt_request_async(prompt, handle_legal_response)
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –Æ—Ä–∏—Å—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}: {e}")
            bot.delete_message(chat_id, processing_msg.message_id)
            bot.send_message(chat_id, "‚ö† –û—à–∏–±–∫–∞ –Æ—Ä–∏—Å—Ç–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", reply_markup=main_menu())
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ
            user_contexts[chat_id] = {"role": None, "history": []}

    # üî¥ –ê–Ω–æ–Ω–∏–º ‚Äî –Ω–∞—á–∞–ª–æ
    @bot.message_handler(commands=['report'])
    def report_start(message):
        chat_id = message.chat.id
        logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∑–∞–ø—É—Å—Ç–∏–ª –¥–∏–∞–ª–æ–≥ —Å –ê–Ω–æ–Ω–∏–º–æ–º")
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_contexts[chat_id] = {"role": "report", "history": []}
        bot.send_message(chat_id, "üî¥ –û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –∞–Ω–æ–Ω–∏–º–Ω–æ:", reply_markup=types.ReplyKeyboardRemove())
        bot.register_next_step_handler(message, report_response)

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    def report_response(message):
        chat_id = message.chat.id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ê–Ω–æ–Ω–∏–º–∞
        if chat_id not in user_contexts or user_contexts[chat_id]["role"] != "report":
            logging.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –ø—ã—Ç–∞–µ—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ")
            bot.send_message(chat_id, "–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–µ–∂–∏–º–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /report –∏–ª–∏ –∫–Ω–æ–ø–∫—É –º–µ–Ω—é.", reply_markup=main_menu())
            return
            
        user_id = message.from_user.id
        report_text = message.text.strip()
        logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –æ—Ç–ø—Ä–∞–≤–∏–ª –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {report_text[:50]}...")
        
        save_report(user_id, report_text)
        bot.send_message(chat_id, "‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ –∏ –ø–µ—Ä–µ–¥–∞–Ω–æ –∞–Ω–æ–Ω–∏–º–Ω–æ.", reply_markup=main_menu())
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
        user_contexts[chat_id] = {"role": None, "history": []}

    # üì∞ –ù–æ–≤–æ—Å—Ç–∏
    @bot.message_handler(commands=['news'])
    def news_handler(message):
        chat_id = message.chat.id
        logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∑–∞–ø—Ä–æ—Å–∏–ª –Ω–æ–≤–æ—Å—Ç–∏")
        
        news_text = get_news()
        bot.send_message(chat_id, news_text, reply_markup=main_menu())

    # ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π
    @bot.message_handler(commands=['update_news'])
    def update_news_start(message):
        chat_id = message.chat.id
        logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∑–∞–ø—É—Å—Ç–∏–ª —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π")
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_contexts[chat_id] = {"role": "update_news", "history": []}
        bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–µ–π:", reply_markup=types.ReplyKeyboardRemove())
        bot.register_next_step_handler(message, process_update_news)

    def process_update_news(message):
        chat_id = message.chat.id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π
        if chat_id not in user_contexts or user_contexts[chat_id]["role"] != "update_news":
            logging.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –ø—ã—Ç–∞–µ—Ç—Å—è –æ–±–Ω–æ–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–∏, –Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ")
            bot.send_message(chat_id, "–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /update_news.", reply_markup=main_menu())
            return
            
        new_news = message.text.strip()
        logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –æ–±–Ω–æ–≤–∏–ª –Ω–æ–≤–æ—Å—Ç–∏: {new_news[:50]}...")
        
        update_news(new_news)
        bot.send_message(chat_id, "‚úÖ –ù–æ–≤–æ—Å—Ç–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!", reply_markup=main_menu())
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
        user_contexts[chat_id] = {"role": None, "history": []}

    # üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã
    @bot.message_handler(commands=['contact'])
    def contact_handler(message):
        chat_id = message.chat.id
        logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∑–∞–ø—Ä–æ—Å–∏–ª –∫–æ–Ω—Ç–∞–∫—Ç—ã")
        
        bot.send_message(chat_id, "üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –º–æ–∂–Ω–æ –ø–æ email: support@cncluga.com", reply_markup=main_menu())

    # –†–∞—Å—Å—ã–ª–∫–∞
    @bot.message_handler(commands=['broadcast'])
    def broadcast_message(message):
        chat_id = message.chat.id
        logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∑–∞–ø—É—Å—Ç–∏–ª —Ä–∞—Å—Å—ã–ª–∫—É")
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_contexts[chat_id] = {"role": "broadcast", "history": []}
        bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:", reply_markup=types.ReplyKeyboardRemove())
        bot.register_next_step_handler(message, process_broadcast)

    def process_broadcast(message):
        chat_id = message.chat.id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Ä–∞—Å—Å—ã–ª–∫–∏
        if chat_id not in user_contexts or user_contexts[chat_id]["role"] != "broadcast":
            logging.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –ø—ã—Ç–∞–µ—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É, –Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ")
            bot.send_message(chat_id, "–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–µ–∂–∏–º–µ —Ä–∞—Å—Å—ã–ª–∫–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /broadcast.", reply_markup=main_menu())
            return
            
        broadcast_text = message.text.strip()
        logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –æ—Ç–ø—Ä–∞–≤–∏–ª —Ä–∞—Å—Å—ã–ª–∫—É: {broadcast_text[:50]}...")
        
        from broadcast import send_broadcast
        send_broadcast(bot, broadcast_text)
        bot.send_message(chat_id, "‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.", reply_markup=main_menu())
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
        user_contexts[chat_id] = {"role": None, "history": []}